{
  "version": 3,
  "sources": ["../../@lexical/react/useLexicalNodeSelection.dev.js", "../../@lexical/react/useLexicalNodeSelection.js", "../../@lexical/react/LexicalHorizontalRuleNode.dev.js", "../../@lexical/react/LexicalHorizontalRuleNode.js", "../../@lexical/react/LexicalMarkdownShortcutPlugin.dev.js", "../../@lexical/react/LexicalMarkdownShortcutPlugin.js"],
  "sourcesContent": ["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar LexicalComposerContext = require('@lexical/react/LexicalComposerContext');\nvar lexical = require('lexical');\nvar react = require('react');\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nfunction isNodeSelected(editor, key) {\n  return editor.getEditorState().read(() => {\n    const node = lexical.$getNodeByKey(key);\n    if (node === null) {\n      return false;\n    }\n    return node.isSelected();\n  });\n}\nfunction useLexicalNodeSelection(key) {\n  const [editor] = LexicalComposerContext.useLexicalComposerContext();\n  const [isSelected, setIsSelected] = react.useState(() => isNodeSelected(editor, key));\n  react.useEffect(() => {\n    let isMounted = true;\n    const unregister = editor.registerUpdateListener(() => {\n      if (isMounted) {\n        setIsSelected(isNodeSelected(editor, key));\n      }\n    });\n    return () => {\n      isMounted = false;\n      unregister();\n    };\n  }, [editor, key]);\n  const setSelected = react.useCallback(selected => {\n    editor.update(() => {\n      let selection = lexical.$getSelection();\n      if (!lexical.$isNodeSelection(selection)) {\n        selection = lexical.$createNodeSelection();\n        lexical.$setSelection(selection);\n      }\n      if (lexical.$isNodeSelection(selection)) {\n        if (selected) {\n          selection.add(key);\n        } else {\n          selection.delete(key);\n        }\n      }\n    });\n  }, [editor, key]);\n  const clearSelected = react.useCallback(() => {\n    editor.update(() => {\n      const selection = lexical.$getSelection();\n      if (lexical.$isNodeSelection(selection)) {\n        selection.clear();\n      }\n    });\n  }, [editor]);\n  return [isSelected, setSelected, clearSelected];\n}\n\nexports.useLexicalNodeSelection = useLexicalNodeSelection;\n", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict'\nconst useLexicalNodeSelection = process.env.NODE_ENV === 'development' ? require('./useLexicalNodeSelection.dev.js') : require('./useLexicalNodeSelection.prod.js')\nmodule.exports = useLexicalNodeSelection;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar LexicalComposerContext = require('@lexical/react/LexicalComposerContext');\nvar useLexicalNodeSelection = require('@lexical/react/useLexicalNodeSelection');\nvar utils = require('@lexical/utils');\nvar lexical = require('lexical');\nvar React = require('react');\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst INSERT_HORIZONTAL_RULE_COMMAND = lexical.createCommand('INSERT_HORIZONTAL_RULE_COMMAND');\nfunction HorizontalRuleComponent({\n  nodeKey\n}) {\n  const [editor] = LexicalComposerContext.useLexicalComposerContext();\n  const [isSelected, setSelected, clearSelection] = useLexicalNodeSelection.useLexicalNodeSelection(nodeKey);\n  const onDelete = React.useCallback(event => {\n    if (isSelected && lexical.$isNodeSelection(lexical.$getSelection())) {\n      event.preventDefault();\n      const node = lexical.$getNodeByKey(nodeKey);\n      if ($isHorizontalRuleNode(node)) {\n        node.remove();\n      }\n    }\n    return false;\n  }, [isSelected, nodeKey]);\n  React.useEffect(() => {\n    return utils.mergeRegister(editor.registerCommand(lexical.CLICK_COMMAND, event => {\n      const hrElem = editor.getElementByKey(nodeKey);\n      if (event.target === hrElem) {\n        if (!event.shiftKey) {\n          clearSelection();\n        }\n        setSelected(!isSelected);\n        return true;\n      }\n      return false;\n    }, lexical.COMMAND_PRIORITY_LOW), editor.registerCommand(lexical.KEY_DELETE_COMMAND, onDelete, lexical.COMMAND_PRIORITY_LOW), editor.registerCommand(lexical.KEY_BACKSPACE_COMMAND, onDelete, lexical.COMMAND_PRIORITY_LOW));\n  }, [clearSelection, editor, isSelected, nodeKey, onDelete, setSelected]);\n  React.useEffect(() => {\n    const hrElem = editor.getElementByKey(nodeKey);\n    if (hrElem !== null) {\n      hrElem.className = isSelected ? 'selected' : '';\n    }\n  }, [editor, isSelected, nodeKey]);\n  return null;\n}\nclass HorizontalRuleNode extends lexical.DecoratorNode {\n  static getType() {\n    return 'horizontalrule';\n  }\n  static clone(node) {\n    return new HorizontalRuleNode(node.__key);\n  }\n  static importJSON(serializedNode) {\n    return $createHorizontalRuleNode();\n  }\n  static importDOM() {\n    return {\n      hr: () => ({\n        conversion: convertHorizontalRuleElement,\n        priority: 0\n      })\n    };\n  }\n  exportJSON() {\n    return {\n      type: 'horizontalrule',\n      version: 1\n    };\n  }\n  exportDOM() {\n    return {\n      element: document.createElement('hr')\n    };\n  }\n  createDOM() {\n    return document.createElement('hr');\n  }\n  getTextContent() {\n    return '\\n';\n  }\n  isInline() {\n    return false;\n  }\n  updateDOM() {\n    return false;\n  }\n  decorate() {\n    return /*#__PURE__*/React.createElement(HorizontalRuleComponent, {\n      nodeKey: this.__key\n    });\n  }\n}\nfunction convertHorizontalRuleElement() {\n  return {\n    node: $createHorizontalRuleNode()\n  };\n}\nfunction $createHorizontalRuleNode() {\n  return lexical.$applyNodeReplacement(new HorizontalRuleNode());\n}\nfunction $isHorizontalRuleNode(node) {\n  return node instanceof HorizontalRuleNode;\n}\n\nexports.$createHorizontalRuleNode = $createHorizontalRuleNode;\nexports.$isHorizontalRuleNode = $isHorizontalRuleNode;\nexports.HorizontalRuleNode = HorizontalRuleNode;\nexports.INSERT_HORIZONTAL_RULE_COMMAND = INSERT_HORIZONTAL_RULE_COMMAND;\n", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict'\nconst LexicalHorizontalRuleNode = process.env.NODE_ENV === 'development' ? require('./LexicalHorizontalRuleNode.dev.js') : require('./LexicalHorizontalRuleNode.prod.js')\nmodule.exports = LexicalHorizontalRuleNode;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar markdown = require('@lexical/markdown');\nvar LexicalComposerContext = require('@lexical/react/LexicalComposerContext');\nvar LexicalHorizontalRuleNode = require('@lexical/react/LexicalHorizontalRuleNode');\nvar react = require('react');\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst HR = {\n  dependencies: [LexicalHorizontalRuleNode.HorizontalRuleNode],\n  export: node => {\n    return LexicalHorizontalRuleNode.$isHorizontalRuleNode(node) ? '***' : null;\n  },\n  regExp: /^(---|\\*\\*\\*|___)\\s?$/,\n  replace: (parentNode, _1, _2, isImport) => {\n    const line = LexicalHorizontalRuleNode.$createHorizontalRuleNode();\n\n    // TODO: Get rid of isImport flag\n    if (isImport || parentNode.getNextSibling() != null) {\n      parentNode.replace(line);\n    } else {\n      parentNode.insertBefore(line);\n    }\n    line.selectNext();\n  },\n  type: 'element'\n};\nconst DEFAULT_TRANSFORMERS = [HR, ...markdown.TRANSFORMERS];\nfunction MarkdownShortcutPlugin({\n  transformers = DEFAULT_TRANSFORMERS\n}) {\n  const [editor] = LexicalComposerContext.useLexicalComposerContext();\n  react.useEffect(() => {\n    return markdown.registerMarkdownShortcuts(editor, transformers);\n  }, [editor, transformers]);\n  return null;\n}\n\nexports.DEFAULT_TRANSFORMERS = DEFAULT_TRANSFORMERS;\nexports.MarkdownShortcutPlugin = MarkdownShortcutPlugin;\n", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict'\nconst LexicalMarkdownShortcutPlugin = process.env.NODE_ENV === 'development' ? require('./LexicalMarkdownShortcutPlugin.dev.js') : require('./LexicalMarkdownShortcutPlugin.prod.js')\nmodule.exports = LexicalMarkdownShortcutPlugin;"],
  "mappings": "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",
  "names": []
}
